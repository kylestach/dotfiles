#!/usr/bin/env bash

set -x

# ====== Variables =============================

declare gaps

gaps["top"]="2"
gaps["bottom"]="24"
gaps["left"]="2"
gaps["right"]="2"
gaps["inner"]="2"

color_focused="0xFF88C0D0"
color_normal="0x002E3440"
color_preselect="0xFFA3BE8C"

# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget
#ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"WIDGET NAME\"'"

# ===== Loading Scripting Additions ============

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== Tiling setting =========================

yabai -m config external_bar all:35:0
yabai -m config layout                      bsp

yabai -m config top_padding                 "${gaps["top"]}"
yabai -m config bottom_padding              "${gaps["bottom"]}"
yabai -m config left_padding                "${gaps["left"]}"
yabai -m config right_padding               "${gaps["right"]}"
yabai -m config window_gap                  "${gaps["inner"]}"

yabai -m config mouse_follows_focus         off
yabai -m config focus_follows_mouse         off

yabai -m config window_topmost              off
yabai -m config window_opacity              off
yabai -m config window_shadow               off

yabai -m config window_border               on
yabai -m config window_border_width         2
yabai -m config active_window_border_color  "${color_focused}"
yabai -m config normal_window_border_color  "${color_normal}"
yabai -m config insert_feedback_color       "${color_preselect}"
yabai -m config window_border_blur          off

yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       1.0
yabai -m config split_ratio                 0.50

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

# ===== Rules ==================================

yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off

yabai -m rule --add app="^Spotify$" space=5
yabai -m rule --add app="^Messages$" space=3
yabai -m rule --add app="^Slack$" space=3
yabai -m rule --add app="^Messenger$" space=3
yabai -m rule --add app="^Signal$" space=3
yabai -m space 3 --layout stack

# ===== Signals ================================

# yabai -m signal --add event=application_front_switched action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=display_changed action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=space_changed action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_created action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_destroyed action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_focused action="${ubersicht_spaces_refresh_command}"
# yabai -m signal --add event=window_title_changed action="${ubersicht_spaces_refresh_command}"

# yabai -m signal --add event=application_front_switched action="sketchybar -m --trigger window_change &> /dev/null"
# yabai -m signal --add event=display_changed action="sketchybar -m --trigger window_change &> /dev/null"
# yabai -m signal --add event=space_changed action="sketchybar -m --trigger window_change &> /dev/null"
# yabai -m signal --add event=window_created action="sketchybar -m --trigger window_change &> /dev/null"
# yabai -m signal --add event=window_destroyed action="sketchybar -m --trigger window_change &> /dev/null"
# yabai -m signal --add event=window_focused action="sketchybar -m --trigger window_change &> /dev/null"
# yabai -m signal --add event=window_title_changed action="sketchybar -m --trigger window_change &> /dev/null"

yabai -m rule --add app=".*[Tt]odoist.*" manage=off

# yabai -m signal --add event=window_created action='
#   yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || \
#   yabai -m window $YABAI_WINDOW_ID --toggle float && \
#   yabai -m window $YABAI_WINDOW_ID --layer above && \
#   yabai -m window $YABAI_WINDOW_ID --grid 3:3:1:1:1:1
# '

osascript -e 'tell application id "tracesOf.Uebersicht" to refresh'

# simple-bar-server
yabai -m signal --add event=window_focused action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows when focused application changes"
yabai -m signal --add event=window_resized action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows when a window is resized"
yabai -m signal --add event=window_destroyed action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-ba spaces & windows when an application window is closed"
yabai -m signal --add event=space_changed action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows on space change"
yabai -m signal --add event=display_changed action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows on display focus change"
yabai -m signal --add event=window_title_changed action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows when current window title changes"
yabai -m signal --add event=space_destroyed action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows on space removal"
yabai -m signal --add event=space_created action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows on space creation"
yabai -m signal --add event=application_activated action="curl http://localhost:7776/yabai/spaces/refresh && curl http://localhost:7776/yabai/windows/refresh" label="Refresh simple-bar spaces & windows when application is activated"
yabai -m signal --add event=display_added action="curl http://localhost:7776/yabai/displays/refresh" label="Refresh simple-bar displays when a new dispay is added"
yabai -m signal --add event=display_removed action="curl http://localhost:7776/yabai/displays/refresh" label="Refresh simple-bar displays when a dispay is removed"
yabai -m signal --add event=display_moved action="curl http://localhost:7776/yabai/displays/refresh" label="Refresh simple-bar displays when a dispay is moved"

yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus recent || yabai -m window --focus first"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus recent || yabai -m window --focus first"

set +x
printf "yabai: configuration loaded...\\n"
